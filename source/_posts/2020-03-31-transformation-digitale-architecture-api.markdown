---
layout: post
title: Transformation digitale. Partie 1 - API
date: 2020-03-31 12:01:38 +0300
comments: 
categories: french Transformation API software java
---

{% img flotte /images/API_Toolbox_for_java_developer_FR_logo.png 100 100 %}
Nous commen√ßons une s√©rie d'articles pour partager notre expertise dans la domaine de la Transformation digitale. 
La premi√®re article pr√©sente notre retour d'exp√©rience sur un tr√®s beau projet d√©velopp√© pour [Leroy Merlin Ukraine](https://leroymerlin.ua) üá∫üá¶ au cours de 2019. 
Ce projet avait pour l'objectif de permettre **la cr√©ation automatique des commandes web** accessibles aux partenaires via **API**‚ùóÔ∏è

<!-- more -->
**API** c'est un sigle en anglais **Application Programming Interface**. 
On peut imaginer une API comme un contrat type entre un fournisseur de services et plusieurs clients. 
Cela ouvre la multitude de possibilit√©s pour un syst√®me eCommerce du fournisseur.
> ‚ÑπÔ∏èÔ∏è Par exemple, le constructeur de cuisines pourrais utiliser son outil 3D existant et envoyer les commandes directement 
dans le back-office du SI de Leroy Merlin. 
Ainsi le business peut engager les nouvelles collaborations tout en assurant le contr√¥le sur les commandes et les paiements.

Le sch√©ma suivant met en √©vidence quelques outils techniques qui se trouvent dans notre boite d'outils pr√©f√©r√©s pour ce genre de projet:  
{% img /images/API_Toolbox_for_java_developer_FR.gif %}

## &#128214; Sommaire

Maintenant on expliquera plus en d√©tail chaque brique logiciel pr√©sent√© ci-dessus.

* [Architecture](#Architecture)
* [Spring](#Spring)
* [Securit√©](#Security)
* [Swagger](#Swagger)
* [Error](#error)
* [jUnit](#jUnit)
* [I18n](#i18n)
* [Packaging](#packaging)

## <a name="Architecture"></a> Architecture
En terme d'architecture nous avons opt√© pour une approche **hybride** - Microservice dans Monolithe üò±. 
Techniquement c'est un jar √† part entier avec toute la logique centr√© API (configuration, s√©curit√©, controllers REST), 
mais qui se trouve √† l'int√©rieur du monolithe. 

Pourquoi une telle approche ? En fait, le d√©ploiement ind√©pendant est un processus assez d√©licat dans l'√©chelle 
d'une grande entreprise (h√©bergement, s√©cu, r√©seaux, etc.) 
Mais cette approche hybride permettra dans le futur proche d'extraire ce composant sous la forme du **fat Jar** 
ou **conteneur Docker** et le d√©ployer  comme une vraie micro-services. 

> ‚ÑπÔ∏èÔ∏è Oui, en pratique l'√©l√©gance et la beaut√© d'une technologie avanc√©e peut √™tre tr√®s limit√©e par les circonstances rigides autour de vous. 
> Mais comme des professionnels et malgr√© les circonstances on doit accepter des inconvenients  




